# -----------------------------------------------------------------------------
# General configuration
# -----------------------------------------------------------------------------

# version format
version: '{branch}-{build}'

# Do not build on tags
skip_tags: true

# Maximum number of concurrent jobs for the project
max_jobs: 2

# -----------------------------------------------------------------------------
# Environment configuration
#
# Added image to ensure all Python versions are available
# -----------------------------------------------------------------------------

init:
  - ps: echo $env:TESTENV

image:
- Visual Studio 2019
environment:
  global:
    WITH_COMPILER: 'cmd /E:ON /V:ON /C'
    BASH_CMD: "bash requirements.extra 0"
  matrix:
    - job_name: P37-x32 basic
      PYTHON: "C:\\Python37"
      NUMPY: "numpy>=1.19.0"
    - job_name: P38-x32 basic
      PYTHON: "C:\\Python38"
      NUMPY: "numpy>=1.19.0"
    - job_name: P39-x32 basic
      PYTHON: "C:\\Python39"
      NUMPY: "numpy>=1.19.0"
    - job_name: P37-x64 basic
      PYTHON: "C:\\Python37-x64"
      NUMPY: "numpy>=1.19.0"
    - job_name: P38-x64 basic
      PYTHON: "C:\\Python38-x64"
      NUMPY: "numpy>=1.19.0"
    - job_name: P39-x64 basic
      PYTHON: "C:\\Python39-x64"
      NUMPY: "numpy>=1.19.0"

install:
  - 'set PATH=%APPVEYOR_BUILD_FOLDER%;%PYTHON%//Scripts;%PATH%'
  - '%PYTHON%\\python.exe -m pip install --upgrade pip'
  - '%PYTHON%\\python.exe -m pip install wheel setuptools -rrequirements.txt'
  - '%BASH_CMD%'
  - '%PYTHON%\\python.exe setup.py install'

test_script:
  - "coverage run --rcfile=.coveragerc -m unittest discover"

build: off
configuration: Release

after_test:
  - if($env:APPVEYOR_REPO_BRANCH == 'main') {
    "%PYTHON%\\python.exe setup.py bdist_wheel"
    }

for:
-
  branches:
    only:
      - main
  artifacts:
    - path: dist/*

#matrix:
#  allow_failures:
#    - PYTHON_VERSION: '3.5'

